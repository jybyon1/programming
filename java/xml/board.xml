<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">


	<resultMap type="member" id="memberResult">
		<id property="m_idx" column="m_idx"/>
		<result column="m_name" property="m_name"/>
		<result property="m_id" column="m_id"/>
	</resultMap> 

	<resultMap type="board" id="BoardResult">
		<id column="b_idx" property="b_idx"/>
		<result column="b_title" property="b_title"/>
		<result column="b_content" property="b_content"/>
		<result column="b_regdate" property="b_regdate"/>
		<result column="b_readhit" property="b_readhit"/>
		
		<association property="member" column="m_idx" resultMap="memberResult">
			<id property="m_idx" column="m_idx"/>
  			<result property="m_name" column="m_name"/>
  			<result property="m_id" column="m_id"/>
		</association>
	</resultMap> 
	
	<!-- 전체조회 안씀시발 -->
	<select id="board_list" resultMap="BoardResult">
		select 
			board.*,member.m_name,member.m_id 
		from board left join member on board.m_idx = member.m_idx 
		order by b_idx desc
	</select>
	
	<!-- 조건별 조회 -->
	<select id="board_list_condition" parameterType="Map" resultMap="BoardResult">
		 select b.* from 
		 (
			select
				a.*,
			    rank() over(order by b_idx desc) as no
		    from 
		    
		    (
		    	select board.*,member.m_name,member.m_id from board left join member on board.m_idx = member.m_idx
			    <trim prefix="where" prefixOverrides="or"> 			
					<if test="name!=null">
						m_name like CONCAT('%',#{name},'%')
					</if>
					<if test="subject!=null">
						b_title like CONCAT('%',#{subject},'%')
					</if>
					<if test="content!=null">
						or b_content like CONCAT('%',#{content},'%')
					</if>
				</trim>

		    ) a 
		 ) b
		 where no between #{ start } and #{ end }
	</select>
	
	<!-- 검색조건별 게시물수 구하기-->
	<select id="board_condition_row_total" parameterType="Map" resultType="int">
		select ifnull(count(*),0),member.m_name,member.m_id from board join member on board.m_idx = member.m_idx
		
		<trim prefix="where" prefixOverrides="or"> 
			
			<if test="name!=null">
						m_name like CONCAT('%',#{name},'%')
					</if>
					<if test="subject!=null">
						b_title like CONCAT('%',#{subject},'%')
					</if>
					<if test="content!=null">
						or b_content like CONCAT('%',#{content},'%')
			</if>
		</trim>
		
	</select>
	
	<!-- 전체게시물수 구하기-->
	<select id="board_row_total" resultType="int">
		select 
			ifnull(count(*),0)
		from board 
	</select>
	
	
	<!-- 데이터 한건 조회 -->
	<select id="board_one" parameterType="int" resultMap="BoardResult">
	select
	board.*,member.m_name,member.m_id
	from board left join member on board.m_idx = member.m_idx
	where b_idx = #{ b_idx }
	</select>
	
	<!-- 새글쓰기 -->
	<insert id="board_insert" parameterType="board">
		  insert into board(b_title,b_content,b_regdate,m_idx,b_readhit) values(#{b_title},#{b_content},curdate(),#{m_idx},#{b_readhit})
	</insert>
	
	<!-- 삭제 -->
	<delete id="board_delete" parameterType="int">
		delete from board where b_idx = #{ b_idx }
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="board_update_readhit" parameterType="int">
		update board set b_readhit = b_readhit + 1
		where b_idx = #{ b_idx }
	</update>
	
	<!-- 수정 -->
	<update id="board_update" parameterType="board">
		update board set b_title = #{ b_title },
						 b_content = #{ b_content },
						 b_regdate = curdate()
		where b_idx = #{ b_idx }				 
						 
	</update>
	

</mapper>
